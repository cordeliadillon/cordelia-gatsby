{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./node_modules/classnames/index.js"],"names":["tags","ProjectCard","data","cn","frontmatter","featured","link","href","title","dangerouslySetInnerHTML","__html","html","status","aria-hidden","join","image","className","alt","fluid","childImageSharp","aspectRatio","Projects","useState","filters","setFilters","showAll","setShowAll","aria-pressed","aria-disabled","onClick","map","tag","i","key","includes","newFilters","filter","item","length","concat","toggleFilter","allMarkdownRemark","edges","edge","shouldShow","node","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","Array","isArray","inner","apply","call","module","exports","default"],"mappings":";6FAAA,uHAQIA,EAAO,CACT,gBACA,OACA,SACA,eAGIC,EAAc,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACpB,OACE,oCACC,0DAAoBC,IAChB,eAAgB,CAChB,yBAA0BD,EAAKE,YAAYC,YAF/C,KAKG,qDACE,uDACIH,EAAKE,YAAYE,KACjB,uBAAGC,KAAML,EAAKE,YAAYE,KAA1B,4BACGJ,EAAKE,YAAYI,OACbN,EAAKE,YAAYI,OAG5B,yBAAKC,wBAAyB,CAACC,OAAQR,EAAKS,MAA5C,6BACA,2EACE,iEAAeT,EAAKE,YAAYQ,QAChC,0BAAoBC,cAAY,OAAhC,qCACA,+DAAaX,EAAKE,YAAYJ,KAAKc,KAAK,SAG5C,qDACIZ,EAAKE,YAAYW,MACjB,kBAAC,IAAD,CACEC,UAAU,UACVC,IAAKf,EAAKE,YAAYa,IAAMf,EAAKE,YAAYa,IAAM,GACnDC,MAAK,iBACFhB,EAAKE,YAAYW,MAAMI,gBAAgBD,MADrC,CAELE,YAAa,QACb,OA7BV,6pBAiMWC,UA3HE,SAAC,GAAY,IAAXnB,EAAU,EAAVA,KAAU,EACGoB,mBAAS,IAAhCC,EADoB,KACXC,EADW,OAEGF,oBAAS,GAAhCG,EAFoB,KAEXC,EAFW,KAoB3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKlB,MAAM,aAEX,2EACA,oEACE,yEACA,2EACE,gEACE,4BAEEmB,eAAcF,EACdG,gBAAeH,EACfI,QA7BS,WACnBH,GAAW,GACXF,EAAW,KAuBH,wDASAxB,EAAK8B,KAAI,SAACC,EAAKC,GAAN,OACP,wBAA4BC,IAAKD,EAAjC,wCACE,4BAEEL,eAAcJ,EAAQW,SAASH,GAC/BF,QAAS,kBAlCJ,SAACE,GACpB,GAAIR,EAAQW,SAASH,GAAM,CACzB,IAAMI,EAAaZ,EAAQa,QAAO,SAACC,GAAD,OAAUA,IAASN,KACrDL,EAAiC,IAAtBS,EAAWG,QACtBd,EAAWW,QAEXX,EAAWD,EAAQgB,OAAOR,IAC1BL,GAAW,GA2BgBc,CAAaT,IAH9B,uCAKGA,SAMb,uEACE7B,EAAKuC,kBAAkBC,MAAMZ,KAAI,SAACa,EAAMX,GACxC,IAAKP,EAAS,CAEZ,IADA,IAAImB,GAAa,EACRZ,EAAI,EAAGA,EAAIT,EAAQe,OAAQN,IAClC,GAAIW,EAAKE,KAAKzC,YAAYJ,KAAKkC,SAASX,EAAQS,IAAK,CACnDY,GAAa,EACb,MAGJ,IAAKA,EACH,OAAO,KAGX,OACE,kBAAC3C,EAAD,CACEgC,IAAKD,EACL9B,KAAMyC,EAAKE,WA/CnB,26B,qBC5GJ,OAOA,WACE,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELjB,EAAI,EAAGA,EAAIkB,UAAUZ,OAAQN,IAAK,CACzC,IAAImB,EAAMD,UAAUlB,GACpB,GAAKmB,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BH,EAAQI,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAIb,OAAQ,CAC3C,IAAIkB,EAAQR,EAAWS,MAAM,KAAMN,GAE/BK,GACFP,EAAQI,KAAKG,QAEV,GAAgB,WAAZJ,EACT,IAAK,IAAInB,KAAOkB,EACVL,EAAOY,KAAKP,EAAKlB,IAAQkB,EAAIlB,IAC/BgB,EAAQI,KAAKpB,IAMrB,OAAOgB,EAAQnC,KAAK,KAGe6C,EAAOC,SAC1CZ,EAAWa,QAAUb,EACrBW,EAAOC,QAAUZ,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL","file":"component---src-pages-projects-js-80275390c532b14d4f6d.js","sourcesContent":["import React, {useState} from \"react\";\nimport cn from 'classnames';\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport _JSXStyle from 'styled-jsx/style';\n\nlet tags = [\n  \"Accessibility\",\n  \"Code\",\n  \"Comics\",\n  \"Photography\",\n];\n\nconst ProjectCard = ({data}) => {\n  return (\n    <>\n     <article className={cn(\n         'project-card', {\n         'project-card--featured': data.frontmatter.featured\n       })}\n     >\n        <div>\n          <h2 className=\"f3\">\n            { data.frontmatter.link ? \n              <a href={data.frontmatter.link}>\n                {data.frontmatter.title}\n              </a> : data.frontmatter.title \n             }\n          </h2>\n          <div dangerouslySetInnerHTML={{__html: data.html}}/>\n          <small className=\"project-card-footer\">\n            <span>Status: {data.frontmatter.status}</span>\n            <span className=\"b\" aria-hidden=\"true\"> &middot; </span>\n            <span>Tags: {data.frontmatter.tags.join(', ')}</span>\n          </small>\n        </div>\n        <div>\n          { data.frontmatter.image ? \n            <Img \n              className=\"rounded\"\n              alt={data.frontmatter.alt ? data.frontmatter.alt : ''}\n              fluid={{\n              ...data.frontmatter.image.childImageSharp.fluid,\n              aspectRatio: 3/2}} />\n            : null\n          }\n        </div>\n      </article>\n      <style jsx>{`\n        .project-card {\n          padding: 1em;\n          display: grid;\n          align-items: start;\n        }\n\n        .project-card--featured {\n          grid-column: 1 / span 2;\n          grid-template-columns: 3fr 2fr;\n          grid-gap: 2rem 2rem;\n        }\n\n        .project-card > div:nth-child(2) {\n          grid-row: 1;\n          grid-column: 1;\n          align-self: start;\n        }\n\n        .project-card p a {\n          font-weight: bold;\n        }\n\n        @media (max-width: 850px) {\n          .project-card--featured {\n            grid-column: 1;\n            grid-template-columns: 1fr;\n            grid-gap: 0;\n          }\n        }\n      `}\n      </style>\n    </>\n  );\n}\n\n\nconst Projects = ({data}) => {\n  const [filters, setFilters] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n\n  const clearFilters = () => {\n    setShowAll(true);\n    setFilters([]);\n  }\n\n  const toggleFilter = (tag) => {\n    if (filters.includes(tag)) {\n      const newFilters = filters.filter((item) => item !== tag);\n      setShowAll(newFilters.length === 0);\n      setFilters(newFilters);\n    } else {\n      setFilters(filters.concat(tag));\n      setShowAll(false);\n    }\n  }\n\n  return  (\n    <Layout>\n      <SEO title=\"Projects\" />\n\n      <h1 className=\"ma0 pa0 f1\">Projects</h1>\n      <div className=\"project-header\">\n        <span className=\"dib mr2\">Filter:</span>\n        <ul className=\"dib project-filters f7\">\n          <li className=\"dib pv1 ml2\">\n            <button \n              className=\"br2 bn pa2\"\n              aria-pressed={showAll} \n              aria-disabled={showAll}\n              onClick={clearFilters}\n            >\n              All Projects\n            </button>\n          </li>\n          { tags.map((tag, i) => (\n              <li className=\"dib pv1 ml2\" key={i}>\n                <button\n                  className=\"br2 bn pa2\"\n                  aria-pressed={filters.includes(tag)}\n                  onClick={() => toggleFilter(tag)}\n                >\n                  {tag}\n                </button>\n              </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"project-container\">\n      { data.allMarkdownRemark.edges.map((edge, i) => {\n        if (!showAll) {\n          let shouldShow = false;\n          for (let i = 0; i < filters.length; i++) {\n            if (edge.node.frontmatter.tags.includes(filters[i])) {\n              shouldShow = true;\n              break;\n            }\n          }\n          if (!shouldShow) {\n            return null;\n          }\n        }\n        return (\n          <ProjectCard \n            key={i}\n            data={edge.node}\n          />\n        );\n\n      })}\n      </div>\n      <style jsx>{`\n        .project-container {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          grid-gap: 2rem 2rem;\n          align-items: start;\n        }\n\n        .project-filters {\n          margin: 0;\n          padding: 5px 0;\n        }\n\n        .project-filters li {\n          list-style-type: none;\n          color: black;\n          border-bottom: 5px solid transparent;\n        }\n\n        .project-filters li:focus-within {\n          border-bottom: 5px solid var(--text);\n        }\n\n        .project-filters button {\n          background-color: transparent;\n          color: var(--text);\n          cursor: pointer;\n        }\n\n        .project-filters button:focus {\n          outline: none;\n        }\n\n        .project-filters button[aria-pressed=\"true\"] {\n          background-color: var(--text);\n          color: var(--background);\n        }\n\n        @media (max-width: 850px) {\n          .project-container {\n            grid-template-columns: 1fr;\n          }\n        }\n      `}\n      </style>\n    </Layout>\n  );\n};\n\nexport default Projects;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: {regex: \"/projects/\"},\n        frontmatter: {status: {ne: \"Hidden\"}}\n      },\n      sort: {\n        fields: [frontmatter___date, frontmatter___title]\n        order: [DESC, ASC]\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 900, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            alt\n            link\n            featured\n            tags\n            status\n          }\n          html\n        }\n      }\n    }\n  }\n`;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}